<?

define('DAY_STATUS_FREE', 'free');
define('DAY_STATUS_BUSY', 'busy');
define('DAY_STATUS_BUSY_SAME', 'busy-same');
define('DAY_STATUS_SELECTED', 'selected');
define('DAY_STATUS_UNAVAILABLE', 'unavailable');

/**
 * Implementation of hook_menu().
 */
function warehouse_menu()
{
  $items['warehouse/queue'] = array(
    'title' => 'Очередь погрузки',
    'page callback' => 'warehouse_queue_page',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 *
 */
function warehouse_queue_page()
{
  $month = isset($_GET['month']) ? $_GET['month'] : date('n');
  $day = isset($_GET['day']) ? $_GET['day'] : date('j');
  $offset = isset($_GET['offset']) ? $_GET['offset'] : null;
  $year = isset($_GET['year']) ? $_GET['year'] : date('Y');
  $output =  warehouse_calendar_template($month, $day, $offset, $year);

  return $output;
}

/**
 *
 */
function warehouse_calendar_template($month = null, $day = null, $offset = null, $year = 2021, $is_form = false)
{
  $time_set = gmmktime(0, 0, 0, $month, $day, $year);

  $calendar = $time_list = '';
  $calendar_arr = warehouse_get_month_dates($month, $year);
  foreach ($calendar_arr as $day_arr) {
    if ($day_arr['day'] > 0) {
      $day_arr['day'] = $day_arr['day'] < 10 ? '0' . $day_arr['day'] : $day_arr['day'];
      $day_start = gmmktime(0, 0, 0, $month, $day_arr['day'], $year);
      $calendar .=
        '<li class="day' . ($day_arr['day'] == $day ? ' active' : '') . '" data-date="' . $day_start . '">' .
          ($day_arr['day'] > 0 ? '<a href="/' . $_GET["q"] . '?month=10&day=' . $day_arr['day'] . '&year=' . $year . '" class="day-content">' . $day_arr['day'] . '</a>' : '') .
          '<div class="busyness-same' . ($day_arr['busy_same'] ? ' busy' : '') . '"></div>' .
          '<div class="busyness">' . ($day_arr['wwork_qty'] ? number_format($day_arr['wwork_qty'] * 100/16, 0) . '%' : '') . '</div>' .
        '</li>';

    } else {
      $calendar .=
        '<li class="day"></li>';
    }
  }

  $schedule = warehouse_get_day_schedule($month, $day, $year);
  $shedule_current_offset = null;
  foreach($schedule as $key => $time) {
    if (in_array($key, [420, 780, 960])) {
      $time_list .= '<div class="col">';
    }
    $classes = $time['status'] . ($time['offset'] == $offset ? ' active' : '');
    $time_list .= '<div class="time ' . (isset($time['duration']) && $time['duration'] == 15 ? 'quarter' : 'half') . '" data-start-offset="' . $time['offset'] . '">' .
                (in_array($time['status'], [DAY_STATUS_UNAVAILABLE, DAY_STATUS_BUSY]) || ($is_form && $time['status'] == DAY_STATUS_BUSY_SAME) ? '<div class="time-content ' . $classes . '">' . $time['text'] . '</div> ' : '<a href="/' . $_GET["q"] . '?month=10&day=' . $day . '&offset=' . $time['offset'] . '" class="time-content ' . $classes . '">' . $time['text'] . '</a>') .
              '</div>';
    if (in_array($key, [705, 945, 1080])) {
      $time_list .= '</div>';
    }

    if ($offset && $time['offset'] == $offset && $time['load']) {
      $shedule_current_offset = $time['offset'];
    }
  }

  $month_prev = $month-1; $year_prev = $year;
  $month_next = $month+1; $year_next = $year;
  if ($month == 1) {
    $month_prev = 12; $year_prev = $year - 1;
  }
  if ($month == 12) {
    $month_next = 1; $year_next = $year + 1;
  }

  $output = '<div class="warehouse">';
  $output.= '<div class="conditions"><ul>' .
            '<li>Дополнительное время с 16<sup>00</sup> до 18<sup>00</sup> открывается после заполнения основного времени</li>' .
            '<li>Резервное время открывается после заполнения дополнительного</li>' .
            '<li>Добавление погрузки на следующий день возможно до 16<sup>00</sup> текущего дня</li>' .
            '<li></li>' .
            '</ul></div>';
  $output .=  '<div class="calendar">' .
                '<h3>' .
                    '<span><a href="/' . $_GET["q"] . '?month=' . $month_prev . '&day=' . $day . '&year=' . $year_prev . '" class="btn btn-link">предыдущий</a></span>' .
                    '<span>' . t(date('F', $time_set)) . ' ' . date('Y', $time_set) . '</span>' .
                    '<span><a href="/' . $_GET["q"] . '?month=' . $month_next . '&day=' . $day . '&year=' . $year_next . '" class="btn btn-link">следующий</a></span>' .
                '</h3>' .
                '<div class="wday">пн</div>' .
                '<div class="wday">вт</div>' .
                '<div class="wday">ср</div>' .
                '<div class="wday">чт</div>' .
                '<div class="wday">пт</div>' .
                '<div class="wday">сб</div>' .
                '<div class="wday">вс</div>' .
                '<ul class="days">' .
                  $calendar .
                '</ul>' .
              '</div>';
  $output .=  '<div class="schedule">' .
                '<h3>Расписание</h3>' .
                '<div class="time-list">' .
                  $time_list .
                '</div>' .
                '<div class="schedule-legend">' .
                  '<div><span class="free"></span>- время свободно</div>' .
                  '<div><span class="busy"></span>- время занято</div>' .
                  '<div><span class="unavailable"></span>- время недоступно</div>' .
                  '<div><span class="busy-same"></span>- время занято вашей компанией</div>' .
                  '<div><span class="selected"></span>- выбранное время</div>' .
                '</div>' .
              '</div>';

  if (!$is_form) {
    // todo проверить, возможно клиент уже выбрал квоту погрузок на день
    $is_add_allowed = $calendar_arr[$day]['wwork_qty_own'] < 24;

    $output .=  '<div class="description">' .
                  '<h3>Задание на погрузку</h3>';
    if ($shedule_current_offset) {

      $output .=  '<div class="wwork-item">' .
                      '<div class="field-item field-truck-number">' .
                        '<span class="field-label">№ автомобиля</span>' .
                        '<div class="field-content">'. $schedule[$shedule_current_offset]['load']->truck_number . '</div>'.
                      '</div>' .
                      '<div class="field-item field-truck-driver">' .
                        '<span class="field-label">Водитель</span>' .
                        '<div class="field-content">'. $schedule[$shedule_current_offset]['load']->truck_driver . '</div>'.
                      '</div>' .
                      '<div class="field-actions">' .
                        '<a class="btn btn-primary btn-xs">Редактировать</a>' .
                      '</div>' .
                    '</div>' .
                  '</div>';
    } elseif ($offset) {
      $output .= $is_add_allowed ?
                  '<a href="/admin/structure/entity-type/warehouse_work/warehouse_work/add?month=' . $month . '&day=' . $day . '&offset=' . $offset . '&year=' . $year . '" class="btn btn-primary add-wwork">Добавить</a>'
                  : 'Вы уже выбрали квоту погрузок на этот день. Добавить сверх квоты можно в течение суток перед погрузкой.<br>Также вы можете запланировать их на другой день.' ;
    } else {
      $output .= '<p>Выберите время в расписании</p>';
    }
    $output .= '</div>';
  }

  return $output;
}

/**
 * hook_FORM_ID_form_alter
 * форма добавления ПОГРУЗКИ
 */
function warehouse_form_eck__entity__form_add_warehouse_work_warehouse_work_alter(&$form, &$form_state)
{
  if (!user_has_role(ROLE_ADMIN)) {
    $month = isset($_GET['month']) ? $_GET['month'] : date('n');
    $day = isset($_GET['day']) ? $_GET['day'] : date('j')+1;
    $offset = isset($_GET['offset']) ? $_GET['offset'] : null;
    $year = isset($_GET['year']) ? $_GET['year'] : 2021;
    $form_state['date'] = [
      'month' => $month,
      'day' => $day,
      'offset' => $offset,
      'year' => $year,
    ];

    $form['actions']['back'] = [
      '#markup' => '<a href="/warehouse/queue?month=' . $month . '&day=' . $day . '&offset=' . $offset . '&year=' . $year . '" class="btn btn-link">отменить</a>',
      '#weight' => 10002,
    ];

    $form['calendar'] = [
      '#markup' => warehouse_calendar_template($month, $day, $offset, $year, true),
      '#weight' => -1,
    ];

    // выбранное в календаре и расписании время погрузки
    $form['time'] = [
      '#type' => 'hidden',
      '#value' => $month && $day && $offset ? gmmktime(0, 0, 0, $month, $day, $year) + $offset * 60 : 0,
    ];

    array_unshift($form["#validate"], 'warehouse_eck__entity__form_add_warehouse_work_warehouse_work_validate');
    $form["#submit"][] = 'warehouse_eck__entity__form_add_warehouse_work_warehouse_work_submit';

    // оформление
    $form['#attributes']['class'][] = 'warehouse-form';
    $form['#attached']['css'][] = drupal_get_path('module', 'warehouse') . '/css/warehouse.css';
    $form['#attached']['js'][] = drupal_get_path('module', 'warehouse') . '/js/warehouse.js';

    $form["field_truck_driver_surname"]["#prefix"] = '<div class="row">';
    $form["field_truck_driver_surname"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_driver_name"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_driver_name2"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_driver_license"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_dopog_license"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_dopog_license_validity"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_file_driver_proxy"]["#attributes"]["class"][] = 'col-sm-6';
    $form["field_file_driver_proxy"]["#suffix"] = '</div>';

    $form["field_truck_number"]["#prefix"] = '<div class="row">';
    $form["field_truck_number"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_brand"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_trailer_number"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_trailer_type"]["#attributes"]["class"][] = 'col-sm-3';
    $form["field_truck_trailer_type"]["#suffix"] = '</div>';

    drupal_set_title('Добавление погрузки');
  }
}

function warehouse_eck__entity__form_add_warehouse_work_warehouse_work_validate($form, &$form_state)
{
  // проверка выбора времени в расписании
  if (empty($form_state["input"]["time"])) {
    form_set_error('field_wwork_time', 'Выберите время погрузки');
    return false;
  } else {
    // проверка на предмет занятости данного времени (заняли другие, пока заполняли форму)
    $dbr = db_select('eck_warehouse_work', 'w');
    $dbr->addField('w', 'id');
    $dbr->innerJoin('field_data_field_wwork_time', 'ft', 'ft.entity_id = w.id');
    $dbr->condition('ft.field_wwork_time_value', $form_state["input"]["time"]);
    $load = $dbr->execute()->fetchCol();
    if (count($load)) {
      form_set_error('field_wwork_time', 'Время погрузки уже занято, выберите другое');
      return false;
    }

    $form_state["values"]["field_wwork_time"]["und"][0]["value"] = $form_state["input"]["time"];
    $form_state["values"]["field_wwork_time"]["und"][0]["value2"] = $form_state["input"]["time"];
  }
}

function warehouse_eck__entity__form_add_warehouse_work_warehouse_work_submit($form, &$form_state)
{
  $wwork_wr = entity_metadata_wrapper('warehouse_work', $form_state["values"]["entity"]->id);
  warehouse_wwork_export($wwork_wr);

  // редирект с параметрами
  $form_state['redirect'] = [
    'warehouse/queue', [ 'query' => [
      'month' => $form_state['date']['month'],
      'day' => $form_state['date']['day'],
      'offset' => $form_state['date']['offset'],
      'year' => $form_state['date']['year'],
    ]]
  ];
}

function warehouse_wwork_export($wwork_wr)
{
  // подготовка массива для выгрузки
  $file_urls = [];
  foreach ($wwork_wr->field_files->getIterator() as $file_wr) {
    $file_urls[] = file_create_url($file_wr->value()['uri']);
  }

  $wwork_arr = [
    'id' => $wwork_wr->getIdentifier(),
    'time' => $wwork_wr->field_wwork_time->value(),
    'driver' => [
      'surname' => $wwork_wr->field_truck_driver_surname->value(),
      'name' => $wwork_wr->field_truck_driver_name->value(),
      'name2' => $wwork_wr->field_truck_driver_name2->value(),
      'license' => $wwork_wr->field_truck_driver_license->value(),
      'proxy_url' => $wwork_wr->field_file_driver_proxy->value() ? file_create_url($wwork_wr->field_file_driver_proxy->value()['uri']) : null,
      'dopog' => $wwork_wr->field_dopog_license->value(),
      'dopog_date' => $wwork_wr->field_dopog_license_validity->value(),
    ],
    'truck' => [
      'number' => $wwork_wr->field_truck_number->value(),
      'brand' => $wwork_wr->field_truck_brand->value(),
      'trailer_type' => $wwork_wr->field_truck_trailer_type->value(),
      'trailer_number' => $wwork_wr->field_truck_trailer_number->value(),
    ],
    'wwork_order_url' => $wwork_wr->field_file_wwork_order->value() ? file_create_url($wwork_wr->field_file_wwork_order->value()['uri']) : null,
    'file_urls' => $file_urls,
  ];

  $wwork_json = json_encode($wwork_arr, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_AMP | JSON_HEX_QUOT | JSON_UNESCAPED_UNICODE | JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT);
  $filename = 'wwork_export_' . $wwork_arr['id'] . '.json';
  $directory = 'private://exchange/';
  file_prepare_directory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
  file_unmanaged_save_data($wwork_json, $directory . $filename, $replace = FILE_EXISTS_RENAME);
}

/**
 * Implements hook_preprocess_page().
 */
function warehouse_preprocess_page(&$vars)
{
  if (arg(0) == 'warehouse') {
    drupal_add_css(drupal_get_path('module', 'warehouse') . '/css/warehouse.css');
    drupal_add_js(drupal_get_path('module', 'warehouse') . '/js/warehouse.js');
  }
}

function warehouse_get_month_dates($month, $year)
{
  $month_start = gmmktime(0, 0, 0, $month, 1, $year);
  // составить массив дней недели, 0 - пустая клетка
  // формат [0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31] - октябрь 2021
  $w = date('w', $month_start); // порядковый номер дня недели
  if ($w == 0) $w = 7; // 0 - это вск
  $days = array_merge(array_fill(0, $w-1, 0), range(1, date('t', $month_start)));

  $calendar = [];
  foreach($days as $key => $day) {
    $load = [];
    $busy_same = [];
    if ($day) {
      $day_start = gmmktime(0, 0, 0, $month, $day, $year);
      $day_finish = gmmktime(0, 0, 0, $month, $day + 1, $year) - 1;

      // проверить количество всех погрузок в этот день
      $dbr = db_select('eck_warehouse_work', 'w');
      $dbr->addField('w', 'id');
      $dbr->innerJoin('field_data_field_wwork_time', 'ft', 'ft.entity_id = w.id');
      $dbr->condition('ft.field_wwork_time_value', [$day_start, $day_finish], 'between');
      $load = $dbr->execute()->fetchCol();

      // проверить наличие погрузок пользователя в этот день
      $dbr = db_select('eck_warehouse_work', 'w');
      $dbr->addField('w', 'id');
      $dbr->condition('w.uid', $GLOBALS['user']->uid);
      $dbr->innerJoin('field_data_field_wwork_time', 'ft', 'ft.entity_id = w.id');
      $dbr->condition('ft.field_wwork_time_value', [$day_start, $day_finish], 'between');
      $busy_same = $dbr->execute()->fetchCol();
    }

    $key_cal = $day? $day : 'e' . $key;
    $calendar[$key_cal] = [
      'day' => $day,
      'wwork_qty' => count($load),
      'wwork_qty_own' => count($busy_same),
      'busy_same' => (bool)$busy_same,
    ];

  }

  return $calendar;
}

function warehouse_get_day_schedule($month, $day, $year)
{
  $uid = $GLOBALS['user']->uid;
  $day_start = gmmktime(0, 0, 0, $month, $day, $year);
  $day_finish = gmmktime(0, 0, 0, $month, $day + 1, $year) - 1;
  $day_current = gmmktime(0, 0, 0, date('n'), date('j'), date('Y'));
  $day_after_current = gmmktime(0, 0, 0, date('n'), date('j')+1, date('Y'));
  $timestamp_gmt = time() + 180*60;

  // найти погрузки в этот день
  $dbr = db_select('eck_warehouse_work', 'w');
  $dbr->fields('w', ['id', 'uid']);
  $dbr->addField('ft', 'field_wwork_time_value', 'time');
  $dbr->innerJoin('field_data_field_wwork_time', 'ft', 'ft.entity_id = w.id');
  $dbr->condition('ft.field_wwork_time_value', [$day_start, $day_finish], 'between');
  $dbr->leftJoin('field_data_field_truck_number', 'ftn', 'ftn.entity_id = w.id');
  $dbr->addField('ftn', 'field_truck_number_value', 'truck_number');
  $dbr->leftJoin('field_data_field_truck_driver_surname', 'ftd', 'ftd.entity_id = w.id');
  $dbr->addField('ftd', 'field_truck_driver_surname_value', 'truck_driver');

  $load = $dbr->execute()->fetchAllAssoc('time');

  // количество погрузок в день после заполнения которых открывается резерв
  // todo заменить на 16
  $is_primary_time_filled = count($load) > 2;

  // условие, при котором на заданный день запись уже недоступна
  // - текущий день и ранее
  // - на следующий день запись доступна до 16:00 текущего
  $is_day_blocked = $day_start < $day_after_current || ($day_start == $day_after_current && $timestamp_gmt > $day_current + 960*60);

  // определить, открываем дополнительное время или резервное
  $is_quarter_locked = true;  // открывать ли резерв
  $offset_to_free = 0;        // какое из дополнительного времени будет открыто
  if ($is_primary_time_filled) {
    $is_more_time_found = false;
    foreach([960, 990, 1020, 1050, 1080] as $offset) {
      if (!$is_more_time_found && !isset($load[$day_start + $offset*60])) {
        $offset_to_free = $offset;
        $is_more_time_found = true;
      }
    }

    if (!$is_more_time_found) {
      $is_quarter_locked = false;
    }
  }

  $schedule = [
    420 => ['status' => isset($load[$day_start + 420*60]) ? ($load[$day_start + 420*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 420, 'duration' => 15, 'text' => '7<sup>00</sup>', 'load' => isset($load[$day_start + 420*60]) ? $load[$day_start + 420*60] : null],
      435 => ['status' => isset($load[$day_start + 435*60]) ? ($load[$day_start + 435*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 435, 'duration' => 15, 'text' => '7<sup>15</sup>', 'load' => isset($load[$day_start + 435*60]) ? $load[$day_start + 435*60] : null],
    450 => ['status' => isset($load[$day_start + 450*60]) ? ($load[$day_start + 450*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 450, 'duration' => 15, 'text' => '7<sup>30</sup>', 'load' => isset($load[$day_start + 450*60]) ? $load[$day_start + 450*60] : null],
      465 => ['status' => isset($load[$day_start + 465*60]) ? ($load[$day_start + 465*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 465, 'duration' => 15, 'text' => '7<sup>45</sup>', 'load' => isset($load[$day_start + 465*60]) ? $load[$day_start + 465*60] : null],
    480 => ['status' => isset($load[$day_start + 480*60]) ? ($load[$day_start + 480*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 480, 'duration' => 15, 'text' => '8<sup>00</sup>', 'load' => isset($load[$day_start + 480*60]) ? $load[$day_start + 480*60] : null],
      495 => ['status' => isset($load[$day_start + 495*60]) ? ($load[$day_start + 495*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 495, 'duration' => 15, 'text' => '8<sup>15</sup>', 'load' => isset($load[$day_start + 495*60]) ? $load[$day_start + 495*60] : null],
    510 => ['status' => isset($load[$day_start + 510*60]) ? ($load[$day_start + 510*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 510, 'duration' => 15, 'text' => '8<sup>30</sup>', 'load' => isset($load[$day_start + 510*60]) ? $load[$day_start + 510*60] : null],
      525 => ['status' => isset($load[$day_start + 525*60]) ? ($load[$day_start + 525*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 525, 'duration' => 15, 'text' => '8<sup>45</sup>', 'load' => isset($load[$day_start + 525*60]) ? $load[$day_start + 525*60] : null],
    540 => ['status' => isset($load[$day_start + 540*60]) ? ($load[$day_start + 540*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 540, 'duration' => 15, 'text' => '9<sup>00</sup>', 'load' => isset($load[$day_start + 540*60]) ? $load[$day_start + 540*60] : null],
      555 => ['status' => isset($load[$day_start + 555*60]) ? ($load[$day_start + 555*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 555, 'duration' => 15, 'text' => '9<sup>15</sup>', 'load' => isset($load[$day_start + 555*60]) ? $load[$day_start + 555*60] : null],
    570 => ['status' => isset($load[$day_start + 570*60]) ? ($load[$day_start + 570*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 570, 'duration' => 15, 'text' => '9<sup>30</sup>', 'load' => isset($load[$day_start + 570*60]) ? $load[$day_start + 570*60] : null],
      585 => ['status' => isset($load[$day_start + 585*60]) ? ($load[$day_start + 585*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 585, 'duration' => 15, 'text' => '9<sup>45</sup>', 'load' => isset($load[$day_start + 585*60]) ? $load[$day_start + 585*60] : null],
    600 => ['status' => isset($load[$day_start + 600*60]) ? ($load[$day_start + 600*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 600, 'duration' => 15, 'text' => '10<sup>00</sup>', 'load' => isset($load[$day_start + 600*60]) ? $load[$day_start + 600*60] : null],
      615 => ['status' => isset($load[$day_start + 615*60]) ? ($load[$day_start + 615*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 615, 'duration' => 15, 'text' => '10<sup>15</sup>', 'load' => isset($load[$day_start + 615*60]) ? $load[$day_start + 615*60] : null],
    630 => ['status' => isset($load[$day_start + 630*60]) ? ($load[$day_start + 630*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 630, 'duration' => 15, 'text' => '10<sup>30</sup>', 'load' => isset($load[$day_start + 630*60]) ? $load[$day_start + 630*60] : null],
      645 => ['status' => isset($load[$day_start + 645*60]) ? ($load[$day_start + 645*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 645, 'duration' => 15, 'text' => '10<sup>45</sup>', 'load' => isset($load[$day_start + 645*60]) ? $load[$day_start + 645*60] : null],
    660 => ['status' => isset($load[$day_start + 660*60]) ? ($load[$day_start + 660*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 660, 'duration' => 15, 'text' => '11<sup>00</sup>', 'load' => isset($load[$day_start + 660*60]) ? $load[$day_start + 660*60] : null],
      675 => ['status' => isset($load[$day_start + 675*60]) ? ($load[$day_start + 675*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 675, 'duration' => 15, 'text' => '11<sup>15</sup>', 'load' => isset($load[$day_start + 675*60]) ? $load[$day_start + 675*60] : null],
    690 => ['status' => isset($load[$day_start + 690*60]) ? ($load[$day_start + 690*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 690, 'duration' => 15, 'text' => '11<sup>30</sup>', 'load' => isset($load[$day_start + 690*60]) ? $load[$day_start + 690*60] : null],
      705 => ['status' => isset($load[$day_start + 705*60]) ? ($load[$day_start + 705*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 705, 'duration' => 15, 'text' => '11<sup>45</sup>', 'load' => isset($load[$day_start + 705*60]) ? $load[$day_start + 705*60] : null],

    780 => ['status' => isset($load[$day_start + 780*60]) ? ($load[$day_start + 780*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 780, 'duration' => 15, 'text' => '13<sup>00</sup>', 'load' => isset($load[$day_start + 780*60]) ? $load[$day_start + 780*60] : null],
      795 => ['status' => isset($load[$day_start + 795*60]) ? ($load[$day_start + 795*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 795, 'duration' => 15, 'text' => '13<sup>15</sup>', 'load' => isset($load[$day_start + 795*60]) ? $load[$day_start + 795*60] : null],
    810 => ['status' => isset($load[$day_start + 810*60]) ? ($load[$day_start + 810*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 810, 'duration' => 15, 'text' => '13<sup>30</sup>', 'load' => isset($load[$day_start + 810*60]) ? $load[$day_start + 810*60] : null],
      825 => ['status' => isset($load[$day_start + 825*60]) ? ($load[$day_start + 825*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 825, 'duration' => 15, 'text' => '13<sup>45</sup>', 'load' => isset($load[$day_start + 825*60]) ? $load[$day_start + 825*60] : null],
    840 => ['status' => isset($load[$day_start + 840*60]) ? ($load[$day_start + 840*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 840, 'duration' => 15, 'text' => '14<sup>00</sup>', 'load' => isset($load[$day_start + 840*60]) ? $load[$day_start + 840*60] : null],
      855 => ['status' => isset($load[$day_start + 855*60]) ? ($load[$day_start + 855*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 855, 'duration' => 15, 'text' => '14<sup>15</sup>', 'load' => isset($load[$day_start + 855*60]) ? $load[$day_start + 855*60] : null],
    870 => ['status' => isset($load[$day_start + 870*60]) ? ($load[$day_start + 870*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 870, 'duration' => 15, 'text' => '14<sup>30</sup>', 'load' => isset($load[$day_start + 870*60]) ? $load[$day_start + 870*60] : null],
      885 => ['status' => isset($load[$day_start + 885*60]) ? ($load[$day_start + 885*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 885, 'duration' => 15, 'text' => '14<sup>45</sup>', 'load' => isset($load[$day_start + 885*60]) ? $load[$day_start + 885*60] : null],
    900 => ['status' => isset($load[$day_start + 900*60]) ? ($load[$day_start + 900*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 900, 'duration' => 15, 'text' => '15<sup>00</sup>', 'load' => isset($load[$day_start + 900*60]) ? $load[$day_start + 900*60] : null],
      915 => ['status' => isset($load[$day_start + 915*60]) ? ($load[$day_start + 915*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 915, 'duration' => 15, 'text' => '15<sup>15</sup>', 'load' => isset($load[$day_start + 915*60]) ? $load[$day_start + 915*60] : null],
    930 => ['status' => isset($load[$day_start + 930*60]) ? ($load[$day_start + 930*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 930, 'duration' => 15, 'text' => '15<sup>30</sup>', 'load' => isset($load[$day_start + 930*60]) ? $load[$day_start + 930*60] : null],
      945 => ['status' => isset($load[$day_start + 945*60]) ? ($load[$day_start + 945*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $is_quarter_locked ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 945, 'duration' => 15, 'text' => '15<sup>45</sup>', 'load' => isset($load[$day_start + 945*60]) ? $load[$day_start + 945*60] : null],

    960 => ['status' => isset($load[$day_start + 960*60]) ? ($load[$day_start + 960*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $offset_to_free != 960 ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 960, 'duration' => 30, 'text' => '16<sup>00</sup>', 'load' => isset($load[$day_start + 960*60]) ? $load[$day_start + 960*60] : null],
    990 => ['status' => isset($load[$day_start + 990*60]) ? ($load[$day_start + 990*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $offset_to_free != 990 ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 990, 'duration' => 30, 'text' => '16<sup>30</sup>', 'load' => isset($load[$day_start + 990*60]) ? $load[$day_start + 990*60] : null],
    1020 => ['status' => isset($load[$day_start + 1020*60]) ? ($load[$day_start + 1020*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $offset_to_free != 1020 ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 1020, 'duration' => 30, 'text' => '17<sup>00</sup>', 'load' => isset($load[$day_start + 1020*60]) ? $load[$day_start + 1020*60] : null],
    1050 => ['status' => isset($load[$day_start + 1050*60]) ? ($load[$day_start + 1050*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $offset_to_free != 1050 ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 1050, 'duration' => 30, 'text' => '17<sup>30</sup>', 'load' => isset($load[$day_start + 1050*60]) ? $load[$day_start + 1050*60] : null],
    1080 => ['status' => isset($load[$day_start + 1080*60]) ? ($load[$day_start + 1080*60]->uid == $uid ? DAY_STATUS_BUSY_SAME : DAY_STATUS_BUSY) : ($is_day_blocked || $offset_to_free != 1080 ? DAY_STATUS_UNAVAILABLE : DAY_STATUS_FREE), 'offset' => 1080, 'duration' => 30, 'text' => '18<sup>00</sup>', 'load' => isset($load[$day_start + 1080*60]) ? $load[$day_start + 1080*60] : null],
  ];

  return $schedule;
}
